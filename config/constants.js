const SYMBOLS = ["AIUSDT", "AIBTC", "MANABTC", "MANAUSDT"], // User-specific
    INITIAL_QUANTITY = "500",
    TRANSACTION_ATTEMPTS = Object.freeze({ // User-specific
        TRANSACTION_1: 2,
        TRANSACTION_2: {
            MARKET: 1,
            ASK_BUY: 2
        }
    }),
    SIDE = Object.freeze({
        BUY: "BUY",
        SELL: "SELL"
    }),
    TYPE = Object.freeze({
        LIMIT: "LIMIT",
        MARKET: "MARKET"
    }),
    TIME_IN_FORCE = Object.freeze({
        GTC: "GTC",
        IOC: "IOC"
    }),
    SELECTED_PRICE = Object.freeze({
        SAME: "SAME",
        CHANGED: "CHANGED"
    }),
    TRANSACTION_STATUS = Object.freeze({
        COMPLETED: "COMPLETED",
        REVERSED: "REVERSED",
        UNDERVALUED: "UNDERVALUED",
        ERROR: "ERROR"
    }),
    RATE_LIMIT = Object.freeze({
        REQUESTS: 50,
        TIME: 10
    }),
    UNIDENTIFIED_PROCESS = "UNIDENTIFIED_PROCESS",
    ERROR_CODE = Object.freeze({
        INSUFFICIENT_QUANTITY: "INSUFFICIENT_QUANTITY"
    }),
    ORDER_STATUS = Object.freeze({
        FILLED: "FILLED",
        EXPIRED: "EXPIRED",
        PARTIALLY_FILLED: "PARTIALLY_FILLED",
        NEW: "NEW",
        CANCELED: "CANCELED"
    }),
    TRANSACTION_DETAIL = Object.freeze({ // User-specific
        condition1: 1, // User-specific
        condition2: 1, // User-specific
        processId: null, // Frequency ID
        orderStatus: null, // COMPLETED || REVERSED || ERROR
        consumedTime: null,
        transactions: [
            {
                orderId: null, // Unique ID generated by Binance
                function: "transaction1",
                symbol: "AIUSDT",
                side: "BUY",
                marketPrice: null, // Price at which the order is to be placed (Not useful for report only required for coding purposes)
                bidPrice: null,
                askPrice: null,
                cummulativeQuoteQty: null, // Quantity of ticker 2
                executedQty: null, // Quantity of ticker 1
                executedPrice: null, // Average price of the fill orders
                qtyPrecision: 1,
                pricePrecision: 3,
                minNotional: 5,
                minQty: 0.1
            },
            {
                orderId: null,
                function: "transaction2",
                symbol: "AIBTC",
                side: "SELL",
                marketPrice: null,
                bidPrice: null,
                askPrice: null,
                cummulativeQuoteQty: null,
                executedQty: null,
                executedPrice: null,
                qtyPrecision: 1,
                pricePrecision: 8,
                minNotional: 0.0001,
                minQty: 0.1
            },
            {
                orderId: null,
                function: "transaction3",
                symbol: "MANABTC",
                side: "BUY",
                marketPrice: null,
                bidPrice: null,
                askPrice: null,
                cummulativeQuoteQty: null,
                executedQty: null,
                executedPrice: null,
                qtyPrecision: 0,
                pricePrecision: 8,
                minNotional: 0.0001,
                minQty: 1
            },
            {
                orderId: null,
                function: "transaction4",
                symbol: "MANAUSDT",
                side: "SELL",
                marketPrice: null,
                bidPrice: null,
                askPrice: null,
                cummulativeQuoteQty: null,
                executedQty: null,
                executedPrice: null,
                qtyPrecision: 0,
                pricePrecision: 4,
                minNotional: 5,
                minQty: 1
            }
        ]
    });

module.exports = {
    SYMBOLS,
    INITIAL_QUANTITY,
    TRANSACTION_ATTEMPTS,
    SIDE,
    TYPE,
    TIME_IN_FORCE,
    SELECTED_PRICE,
    TRANSACTION_STATUS,
    RATE_LIMIT,
    UNIDENTIFIED_PROCESS,
    ERROR_CODE,
    ORDER_STATUS,
    TRANSACTION_DETAIL
};
